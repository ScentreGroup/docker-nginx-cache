# vim: set syntax=nginx:

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
  worker_connections  1024;
  multi_accept on;
  use epoll;
}

http {
  server_tokens off;

  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format logstash  '{ "@timestamp": "$time_iso8601", '
                       '"@fields": { '
                       '"remote_addr": "$remote_addr", '
                       '"remote_user": "$remote_user", '
                       '"body_bytes_sent": "$body_bytes_sent", '
                       '"duration": "$request_time", '
                       '"status": "$status", '
                       '"request": "$request", '
                       '"request_method": "$request_method", '
                       '"http_referrer": "$http_referer", '
                       '"http_user_agent": "$http_user_agent" } }';

  access_log  /var/log/nginx/access.log  logstash;

  sendfile       off;
  tcp_nopush     on;
  tcp_nodelay    off;

  keepalive_timeout  20;

  # Compression

  # Enable Gzip compressed.
  gzip on;

  # Enable compression both for HTTP/1.0 and HTTP/1.1 (required for CloudFront).
  gzip_http_version  1.0;

  # Compression level (1-9).
  # 5 is a perfect compromise between size and cpu usage, offering about
  # 75% reduction for most ascii files (almost identical to level 9).
  gzip_comp_level    5;

  # Don't compress anything that's already small and unlikely to shrink much
  # if at all (the default is 20 bytes, which is bad as that usually leads to
  # larger files after gzipping).
  gzip_min_length    256;

  # Compress data even for clients that are connecting to us via proxies,
  # identified by the "Via" header (required for CloudFront).
  gzip_proxied       any;

  # Compress all output labeled with one of the following MIME-types.
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
    text/plain
    text/x-component;

  # Enable PURGE method for cache purging
  map $request_method $purge_method {
    PURGE 1;
    default 0;
  }

  proxy_cache_path  /var/cache/nginx levels=1:2 keys_zone=cache:128m max_size=1000m inactive=600m;
  proxy_cache_key "$scheme$host$request_uri";
  limit_conn_zone $server_name zone=perserver:10m;

  include /etc/nginx/conf.d/*.conf;
}
